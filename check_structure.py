#!/usr/bin/env python3
"""
üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞ Crypto AI Analytics
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
"""

import os
from pathlib import Path
import importlib.util

def check_file_exists(file_path: str, description: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞"""
    exists = Path(file_path).exists()
    status = "‚úÖ" if exists else "‚ùå"
    print(f"{status} {description}: {file_path}")
    return exists

def check_directory_exists(dir_path: str, description: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"""
    exists = Path(dir_path).is_dir()
    status = "‚úÖ" if exists else "‚ùå"
    print(f"{status} {description}: {dir_path}")
    return exists

def check_import(module_name: str, description: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª—è"""
    try:
        importlib.import_module(module_name)
        print(f"‚úÖ {description}: {module_name}")
        return True
    except ImportError as e:
        print(f"‚ùå {description}: {module_name} - {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞ Crypto AI Analytics")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
    print("\nüìÅ –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã:")
    main_files = [
        ("main.py", "–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"),
        ("launcher.py", "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ª–∞—É–Ω—á–µ—Ä"),
        ("launcher_config.py", "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ª–∞—É–Ω—á–µ—Ä–∞"),
        ("build_exe.py", "–°–±–æ—Ä–∫–∞ exe —Ñ–∞–π–ª–∞"),
        ("start_app.bat", "Windows bat —Ñ–∞–π–ª"),
        ("start_app.ps1", "PowerShell —Å–∫—Ä–∏–ø—Ç"),
        ("requirements.txt", "–û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"),
        ("requirements_exe.txt", "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è exe"),
        ("README.md", "–û—Å–Ω–æ–≤–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è"),
        ("PROJECT_STRUCTURE.md", "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞")
    ]
    
    main_files_ok = 0
    for file_path, description in main_files:
        if check_file_exists(file_path, description):
            main_files_ok += 1
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    print("\nüìÇ –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:")
    main_dirs = [
        ("api", "API —Å–µ—Ä–≤–µ—Ä"),
        ("config", "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è"),
        ("data", "–î–∞–Ω–Ω—ã–µ"),
        ("features", "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã"),
        ("frontend", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"),
        ("inference", "–ò–Ω—Ñ–µ—Ä–µ–Ω—Å –∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è"),
        ("models", "–ú–æ–¥–µ–ª–∏ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è"),
        ("news", "–ê–Ω–∞–ª–∏–∑ –Ω–æ–≤–æ—Å—Ç–µ–π"),
        ("scripts", "–í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã")
    ]
    
    main_dirs_ok = 0
    for dir_path, description in main_dirs:
        if check_directory_exists(dir_path, description):
            main_dirs_ok += 1
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    print("\nüîß –ö–ª—é—á–µ–≤—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:")
    key_components = [
        ("frontend/enhanced_ui.py", "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π UI"),
        ("models/enhanced_model.py", "–£–ª—É—á—à–µ–Ω–Ω–∞—è –Ω–µ–π—Ä–æ—Å–µ—Ç—å"),
        ("news/enhanced_news.py", "–ê–Ω–∞–ª–∏–∑ –Ω–æ–≤–æ—Å—Ç–µ–π"),
        ("api/app.py", "REST API —Å–µ—Ä–≤–µ—Ä"),
        ("features/indicators.py", "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã"),
        ("inference/predict_service.py", "–°–µ—Ä–≤–∏—Å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π")
    ]
    
    key_components_ok = 0
    for file_path, description in key_components:
        if check_file_exists(file_path, description):
            key_components_ok += 1
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç—ã
    print("\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤:")
    imports_ok = 0
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏
        from launcher import CryptoAILauncher
        print("‚úÖ –õ–∞—É–Ω—á–µ—Ä: launcher.CryptoAILauncher")
        imports_ok += 1
    except ImportError as e:
        print(f"‚ùå –õ–∞—É–Ω—á–µ—Ä: {e}")
    
    try:
        from launcher_config import get_config
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: launcher_config.get_config")
        imports_ok += 1
    except ImportError as e:
        print(f"‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    print("\nüóëÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤:")
    removed_files = [
        ("frontend/streamlit_app.py", "–°—Ç–∞—Ä—ã–π UI (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–¥–∞–ª–µ–Ω)"),
        ("models/model.py", "–°—Ç–∞—Ä–∞—è –º–æ–¥–µ–ª—å (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —É–¥–∞–ª–µ–Ω–∞)"),
        ("models/train.py", "–°—Ç–∞—Ä—ã–π —Ç—Ä–µ–Ω–∏–Ω–≥ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–¥–∞–ª–µ–Ω)"),
        ("models/sklearn_models.py", "–°—Ç–∞—Ä—ã–µ sklearn –º–æ–¥–µ–ª–∏ (–¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É–¥–∞–ª–µ–Ω—ã)"),
        ("news/tg_ingest.py", "–°—Ç–∞—Ä—ã–π Telegram –∏–Ω–∂–µ–∫—Ç (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–¥–∞–ª–µ–Ω)"),
        ("news/sentiment.py", "–°—Ç–∞—Ä—ã–π –∞–Ω–∞–ª–∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–¥–∞–ª–µ–Ω)")
    ]
    
    removed_files_ok = 0
    for file_path, description in removed_files:
        if not Path(file_path).exists():
            print(f"‚úÖ {description}: {file_path} - —É–¥–∞–ª–µ–Ω")
            removed_files_ok += 1
        else:
            print(f"‚ùå {description}: {file_path} - –≤—Å–µ –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print("\n" + "=" * 60)
    print("üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"üìÅ –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã: {main_files_ok}/{len(main_files)} ‚úÖ")
    print(f"üìÇ –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: {main_dirs_ok}/{len(main_dirs)} ‚úÖ")
    print(f"üîß –ö–ª—é—á–µ–≤—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã: {key_components_ok}/{len(key_components)} ‚úÖ")
    print(f"üì¶ –ò–º–ø–æ—Ä—Ç—ã: {imports_ok}/2 ‚úÖ")
    print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã: {removed_files_ok}/{len(removed_files)} ‚úÖ")
    
    total_checks = len(main_files) + len(main_dirs) + len(key_components) + 2 + len(removed_files)
    total_passed = main_files_ok + main_dirs_ok + key_components_ok + imports_ok + removed_files_ok
    
    print(f"\nüéØ –û–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {total_passed}/{total_checks} –ø—Ä–æ–≤–µ—Ä–æ–∫ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if total_passed == total_checks:
        print("üéâ –ü—Ä–æ–µ–∫—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        print("üí° –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å exe —Ñ–∞–π–ª: python build_exe.py")
    else:
        print("‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å")
    
    return total_passed == total_checks

if __name__ == "__main__":
    success = main()
    if not success:
        print("\n‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞")
        exit(1)
    else:
        print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
